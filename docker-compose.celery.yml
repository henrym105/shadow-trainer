services:
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - shadow-trainer-network

  api:
    build:
      context: .
      dockerfile: Dockerfile.celery
      target: api
    ports:
      - "8002:8002"
    environment:
      - USE_CELERY=true
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - CELERY_WORKER_CONCURRENCY=2
      - INCLUDE_2D_IMAGES=true
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - api_tmp:/app/api_backend/tmp_api_output
      - ./api_backend/checkpoint:/app/api_backend/checkpoint:ro
      - ./api_backend/sample_videos:/app/api_backend/sample_videos:ro
    restart: unless-stopped
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    networks:
      - shadow-trainer-network

  celery-worker:
    build:
      context: .
      dockerfile: Dockerfile.celery
      target: worker
    environment:
      - USE_CELERY=true
      - CELERY_WORKER=true
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - CELERY_WORKER_CONCURRENCY=2
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - api_tmp:/app/api_backend/tmp_api_output
      - ./api_backend/checkpoint:/app/api_backend/checkpoint:ro
      - ./api_backend/sample_videos:/app/api_backend/sample_videos:ro
    restart: unless-stopped
    networks:
      - shadow-trainer-network
    deploy:
      replicas: 2
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]

  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile.celery
      target: beat
    environment:
      - USE_CELERY=true
      - CELERY_WORKER=true
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./api_backend/checkpoint:/app/api_backend/checkpoint:ro
    restart: unless-stopped
    networks:
      - shadow-trainer-network

  flower:
    build:
      context: .
      dockerfile: Dockerfile.celery
      target: flower
    ports:
      - "5555:5555"
    environment:
      - USE_CELERY=true
      - CELERY_WORKER=true
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - shadow-trainer-network

volumes:
  redis_data:
  api_tmp:

networks:
  shadow-trainer-network:
    driver: bridge
