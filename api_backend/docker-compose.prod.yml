services:
  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  api:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: fastapi
    command: uvicorn api_service:app --host 0.0.0.0 --port 8000
    ports:
      - "8000:8000"
    depends_on:
      - redis
    restart: unless-stopped
    volumes:
      - ./:/app
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]

  worker:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: celery_worker
    command: celery -A tasks worker --loglevel=info
    depends_on:
      - api
    restart: unless-stopped
    volumes:
      - ./:/app
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]

  flower:
    build: .
    image: mher/flower:latest
    command: celery -A tasks flower --port=5555
    ports:
      - "5555:5555"
    depends_on:
      - redis
    restart: unless-stopped
    environment:
      - FLOWER_UNAUTHENTICATED_API=1

  redis-commander:
    image: rediscommander/redis-commander
    ports:
      - "8081:8081"
    depends_on:
      - redis
    environment:
      - REDIS_HOSTS=local:redis:6379

  frontend:
    build: ../api_frontend
    container_name: react_frontend
    ports:
      - "3000:3000"
    depends_on:
      - api
    restart: unless-stopped

  nginx:
    image: nginx:latest
    container_name: nginx_proxy
    ports:
      - "443:443"
      - "8002:8002"
    depends_on:
      - api
      - frontend
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - /etc/letsencrypt/live/dev.shadow-trainer.com/fullchain.pem:/etc/nginx/certs/fullchain.pem:ro
      - /etc/letsencrypt/live/dev.shadow-trainer.com/privkey.pem:/etc/nginx/certs/privkey.pem:ro
    restart: unless-stopped